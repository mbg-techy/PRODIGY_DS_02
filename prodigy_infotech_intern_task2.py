# -*- coding: utf-8 -*-
"""Prodigy_InfoTech-Intern-Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NVQRRooQhQ9WdlNZjBRCbxz8JSZeCSiq

# Prodigy InfoTech DS Task-2

Perform data cleaning and exploratory data analysis (EDA) on a dataset of your choice, such as the Titanic dataset from Kaggle. Explore the relationships between variables and identify patterns and trends in the data.

Dataset Link: https://www.kaggle.com/competitions/titanic/data

Importing all the required libraries
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""Importing the dataset from the local file"""

df=pd.read_csv("/content/train.csv")
df

"""Shape of the Dataset describes the no of rows and columns in  the dataset"""

df.shape

"""# Variable Description


PassengerId: unique id number to each passenger

Survived: passenger survive(1) or died(0)

Pclass: passenger class

Name: name

Sex: gender of passenger

Age: age of passenger

SibSp: number of siblings/spouses

Parch: number of parents/children

Ticket: ticket number

Fare: amount of money spent on ticket

Cabin: cabin category

Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)
"""

df.columns

"""Describing the dataset gives you a overall view of the dataset and its basic parameters like mean,min,max,quantiles etc."""

df.describe()

"""Here we separate the colums as categorical and numerical"""

col = list(df.columns)
categorical_features = []
numerical_features = []
for i in col:
    if len(df[i].unique()) > 6:
        numerical_features.append(i)
    else:
        categorical_features.append(i)

print('Categorical Features :',*categorical_features)
print('Numerical Features :',*numerical_features)

"""# Checking for null values

It is very important to check for anamolies like null or nan values in your dataset to avoid incorrect learning or predictions
"""

df.isnull().sum()

"""# Filling Null values with mean,mode and roving some that aren't important"""

df['Age'].fillna(df['Age'].mean(),inplace=True)
df.isnull().sum()

df['Cabin'].fillna(df['Cabin'].mode()[0],inplace=True)
df.isnull().sum()

df.dropna()

"""# Data Visualization

Here from the below countplot we see that from tht titanic incident many have not survived.
"""

sns.countplot(x =df['Survived'])

"""From the below graph we see that passengers of age 30 and below were more in that cruise"""

plt.figure(figsize=(10,8))
sns.histplot(df['Age'],bins=20,kde=True)
plt.xlabel('Age')
plt.ylabel('Count')
plt.title('Age Distribution')
plt.show()

"""# Correlation HeatMap"""

plt.figure(figsize=(10,8))
sns.heatmap(df.corr(),annot=True,cmap='coolwarm',fmt='.2f')
plt.title('Correlation Map')
plt.show()

"""This graph gives us that sex ratio in that incident"""

sns.countplot(x =df['Sex'])

"""From the below grpah we infer that mostly gentlemen died were dead in that incident"""

sns.countplot(x =df['Sex'],hue = df['Survived'])

"""This indicates that the third class passengers are higher in the titanic"""

sns.countplot(data = df , x = 'Pclass')

"""Here we conclude that second class passengers have the most survival ratio"""

sns.countplot(data = df , x = 'Pclass', hue = 'Survived')

"""Many passengers embarked/booarded in the Southampton port"""

df['Embarked'].unique()
sns.countplot(data = df , x = 'Embarked')

"""This give the survival rate for each age of passengers"""

g = sns.FacetGrid(df, col = "Survived")
g.map(sns.distplot, "Age", bins = 25)
plt.show()